[{"id":"content:0.index.md","path":"/","dir":"","title":"Home","description":"","keywords":[],"body":"     Zippy little utilities for your frameworks.   All the parts you don't want to write for   Next  and   Nuxt .      +200+ functions  Typescript support  Under 10kb (gzipped)  Modifiers, utilities, validators and sanitizers      What's included      Nuxt Architecture   Harness the full power of   Nuxt 3  and its   modules  ecosystem.    Nuxt Studio ready   Edit your theme content and appearance with live-preview within   Nuxt Studio .    Vue Components   Use built-in components (or your own!) inside your content.    Write Markdown   Enjoy the ease and simplicity of Markdown and discover   MDC syntax .    Deploy anywhere   Zero config on   Vercel  or   Netlify . Choose between static generation, on-demand rendering (Node) or edge-side rendering on   CloudFlare workers .    Extensible.   Customize the whole design, or add components using slots - you can make Docus your own."},{"id":"content:1.introduction:1.getting-started.md","path":"/introduction/getting-started","dir":"introduction","title":"Getting Started","description":"From your Markdown files to a deployed website in few minutes.","keywords":["Play online","Create a new project"],"body":"  Getting Started  From your Markdown files to a deployed website in few minutes.  Play online  You can start playing with Docus in your browser using Stackblitz:  Play on StackBlitz  Create a new project   Start a fresh Docus project with:     npx   nuxi@latest   init   docs   -t   themes/docus\n   Install the dependencies in the   docs  folder:      npm   install\n     yarn   install\n     pnpm   install   --shamefully-hoist\n   Run the   dev  command to start Docus in development mode:      npm   run   dev\n     yarn   dev\n     pnpm   run   dev\n   âœ¨ Well done! A browser window should automatically open for   http://localhost:3000  html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}"},{"id":"content:1.introduction:2.project-structure.md","path":"/introduction/project-structure","dir":"introduction","title":"What are modifiers?","description":"Modifiers are a key feature of Mods that allow you to easily modify and enhance your content. They are small pieces of code that can be applied to your JS to add functionality, validation or style.","keywords":[],"body":"  What are modifiers?  Modifiers are a key feature of Mods that allow you to easily modify and enhance your content. They are small pieces of code that can be applied to your JS to add functionality, validation or style."},{"id":"content:1.introduction:3.writing-pages.md","path":"/introduction/writing-pages","dir":"introduction","title":"Writing Pages","description":"Docus is made to let you write all your content in Markdown and Vue components with the MDC syntax.","keywords":["Frontmatter"],"body":"  Writing Pages  Docus is made to let you write all your content in Markdown and Vue components with the MDC syntax.  Each Markdown pages in the   content/  folder will be mapped to a route. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n     File  Generated route     index.md   /    about.md   /about    blog/index.md   /blog    blog/hello.md   /blog/hello    1.guide/2.installation   /guide/installation  Frontmatter  Docus supports multiple Front-matter attributes for pages.     ---\n   title  :   \"Get Started\"\n   description  :   \"Let's learn how to use my amazing module.\"\n   ---\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      Key   Type   Default   Description     layout   string   default  Use any layout name like you would in   definePageMeta()    title   string   Defines the page title and H1 in docs pages    description   string   Defines the page description and excerpt in docs pages    redirect   string   A route path to redirect    image   object   OpenGraph cover image    Docs layout options       aside   boolean   Toggles the visibility of aside navigation    toc   boolean   Toggles the visibility of table of contents    header   boolean   Toggles the visibility of the page header    bottom   boolean   Toggles the visibility of page bottom section    Navigation options       navigation   boolean   Toggles the visibility of the page or directory in navigation    navigation.title   string   Changes the name of the page or directory in navigation    navigation.icon   string   Changes the icon of the page or directory in navigation  html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}"},{"id":"content:1.introduction:4.configuration.md","path":"/introduction/configuration","dir":"introduction","title":"Configuration","description":"Learn how to configure Docus.","keywords":["Customizing the logo"],"body":"  Configuration  Learn how to configure Docus.      export   default   defineAppConfig  ({\n     docus: {\n       title:   'Docus'  ,\n       description:   'My Docus Project'  ,\n       url:   'http://docus.dev'\n     }\n   })\n     export   default   defineAppConfig  ({\n     docus: {\n       title:   'Docus'  ,\n       description:   'My Docus Project'  ,\n       url:   'http://docus.dev'  ,\n       image:   '/social-card-preview.png'  ,\n       socials: {\n         twitter:   '@nuxt_js'  ,\n         github:   'nuxt-themes/docus'  ,\n       },\n       github: {\n         root:   'content'  ,\n         edit:   true  ,\n         contributors:   false\n       },\n       layout:   'default'  ,\n       aside: {\n         level:   1  ,\n         filter: [],\n       },\n       header: {\n         title:   false  ,\n         logo:   true  ,\n         showLinkIcon:   false\n       },\n       footer: {\n         credits: {\n           icon:   'IconDocus'  ,\n           text:   'Powered by Docus'  ,\n           href:   'https://docus.dev'  ,\n         },\n         textLinks: [\n           {\n             text:   'Nuxt'  ,\n             href:   'https://nuxt.com'  ,\n             target:   '_blank'  ,\n             rel:   'noopener'\n           }\n         ],\n         iconLinks: [\n           {\n             label:   'NuxtJS'  ,\n             href:   'https://nuxtjs.org'  ,\n             component:   'IconNuxtLabs'  ,\n           },\n           {\n             label:   'Vue Telescope'  ,\n             href:   'https://vuetelescope.com'  ,\n             component:   'IconVueTelescope'  ,\n           },\n         ],\n       }\n     }\n   })\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      Key   Type   Default   Description     title   string  Docus  Website title    titleTemplate   string  Docus  Website title template    description   string  My Docus Project  Website description    url   string   Website URL    layout   string  default  Fallback layout to use (supports   default  or   page )    Socials       socials   object   {}  Social links    socials.github   string   The repository to use on GitHub links    socials.twitter   string   The account to use on Twitter links    socials.youtube   string   The channel to use on Youtube links    socials.instagram   string   The account to use on Instagram links    socials.facebook   string   The account to use on Facebook links    socials.medium   string   The account to use on Medium links    socials.[social]   object   Override social or display custom one    socials.[social].label   string   A label to use for the social    socials.[social].icon   string   A icon to use for the social    socials.[social].href   string   A link to use for the social    socials.[social].rel   string   noopener noreferrer  A space-separated list of   link types    Header       header   object   Header configuration    header.logo   boolean   Whether or not to use   Logo.vue  as the header logo    header.title   string   If set to a string, will be used in the header    header.showLinkIcon   boolean   If set to   true  links icons will show in the header    header.exclude   string[]   An array of path to exclude out from the header navigation    header.fluid   boolean   true  Make header   Container  fluid    Main       main   object   Main configuration    main.fluid   boolean   true  Make main content   Container  fluid    main.padded   boolean   true  Make main content   Container  padded    Aside       aside   object   Aside configuration    aside.level   string  0  Aside base level of nesting    aside.collapsed   boolean   Will be used as default value for collapsible navigation categories    aside.exclude   string[]   An array of path to exclude out from the aside navigation    Footer       footer   object   Footer configuration    footer.credits   object   An object defining the bottom left credits    footer.credits.icon   object   The icon to use for the credits    footer.credits.text   object   The text to use for the credits    footer.textLinks   array   []  An array of texts to display at the center of footer    footer.textLinks[0].text   string   The text to display    footer.textLinks[0].href   string   A link to use for the text    footer.textLinks[0].target   string   _self  Where to display the linked URL, as the name for a browsing context    footer.textLinks[0].rel   string   noopener noreferrer  A space-separated list of   link types    footer.iconLinks   array   []  An array of icons to display in the footer    footer.iconLinks[0].label   string   A label to use for the icon    footer.iconLinks[0].href   string   A link to use for the icon    footer.iconLinks[0].icon   string   The icon to use (can be a component name)    footer.iconLinks[0].rel   string   noopener noreferrer  A space-separated list of   link types    footer.fluid   boolean   true  Make footer   Container  fluid    GitHub       github   object   false  GitHub integration configuration    github.dir   string   Directory containing the files to be edited    github.branch   string   Branch to start editing    github.repo   string   Name of the GitHub repo to edit files    github.owner   string   Owner of the repo    github.edit   boolean   Toggle \"Edit this page on Github\" component on documentation pages    Search       fuse   object   useFuse   options  Customizing the logo  To update the logo in the header, create a component in   components/Logo.vue  with your own logo.  In this example, the image is located at   /public/img .     <  template  >\n     <  img   width  =  \"120\"   src  =  \"/img/YOURLOGO.png\"  />\n   </  template  >\n  html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}"},{"id":"content:2.functions:actions.md","path":"/functions/actions","dir":"functions","title":"Actions","description":"","keywords":["// subtitle: Page Actions","// subtitle: Form Actions"],"body":"  Actions  A collection of useful actions  // subtitle: Page Actions  // description: A collection of useful actions  // subtitle: Form Actions  // description: A collection of useful actions"},{"id":"content:2.functions:detections.md","path":"/functions/detections","dir":"functions","title":"Detections","description":"","keywords":["detectDevice","detectDeviceType","detectBrowser","detectActiveBrowser","detectColorScheme","detectOS","detectBrowserLanguage","detectGeolocation","detectDeviceOrientation","detectDeviceMotion","detectTailwindContainerBreakpoint","detectScrollPosition"],"body":"  Detections  A collection of detections for common data types  detectDevice  Detect the current device type (Mobile or Desktop)     detectDevice  ()\n     `Mobile` or `Desktop`\n  detectDeviceType  Detect the device OS (iOS, Android, Windows, etc.)     detectDeviceType  ()\n     `iOS`, `Android`, `Windows`, `Mac`, `Linux`, `UNIX`, or `Unknown`\n  detectBrowser  Detects the user's browser based on the user agent string.     detectBrowser  ()\n     A string representing the detected browser.\n  detectActiveBrowser  Detect if the browser window is currently active or hidden.     detectActiveBrowser  ()\n  detectColorScheme  Detect the current color scheme     detectColorScheme  ()\n  detectOS  Detect the current operating system     `getOS()`\n  detectBrowserLanguage  Detect the current browser language     detectBrowserLanguage  ()\n  detectGeolocation  Detect the current user's location     detectUserLocation  ()\n  detectDeviceOrientation  Detect the currect device orientation     detectDeviceOrientation  ()\n  detectDeviceMotion  Detect the current device motion     detectDeviceMotion  ()\n  detectTailwindContainerBreakpoint  Detect the current container breakpoint based on Tailwind CSS breakpoints     detectTailwindContainerBreakpoint  (  'container'  )\n  detectScrollPosition  Detect the current scroll position of the window     detectScrollPosition  ()\n  html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}"},{"id":"content:2.functions:formatters.md","path":"/functions/formatters","dir":"functions","title":"Formatters","description":"","keywords":["formatCurrency","formatCurrencyUnits","formatTime","formatDatetime","formatPercentage","formatList"],"body":"  Formatters  A collection of formatters for common data types  formatCurrency  Format numbers into local currency     formatCurrency  (  1234.56  )\n     $1,234.56\n  formatCurrencyUnits  Format a number as a currency in thousands, millions, or billions     formatCurrencyUnits  (  1234567890  )\n     $1.23B\n  formatTime  Format time into hours, minutes, and seconds     formatTime  (  3723  )\n     1hr 2min 3s\n  formatDatetime  Format Unix timestamp into a datetime string     formatDatetime  (  1619097600  )\n     2021-04-22 00:00:00\n  formatPercentage  Format a number into a percentage     formatPercentage  (  0.1234  )\n     12.34%\n  formatList  Create a string of comma-separated values from an array of strings with an optional conjunction.     commaList  ([  'one'  ,   'two'  ,   'three'  ])\n     one, two and three\n  html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}"},{"id":"content:2.functions:generators.md","path":"/functions/generators","dir":"functions","title":"Generators","description":"","keywords":["generateShortId","generateInitials"],"body":"  Generators  A collection of generators  generateShortId  Generate a unique short ID based on the current timestamp     generateShortId  (  36  )\n     1HR2MIN3S\n  generateInitials  Generate initials from any string     generateInitials  (  'John Doe'  )\n     JD\n  html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}"},{"id":"content:2.functions:modifiers.md","path":"/functions/modifiers","dir":"functions","title":"Modifiers","description":"","keywords":["widont","stripHtml","escapeHtml","unescapeHtml","stripTags","slugify","deslugify","truncate","truncateWords","countWords","countCharacters","countLines","stripWhitespace","stripNumbers","stripPunctuation","stripSymbols","stripEmojis","readingTime","pluralize","singularize","ordinalize","humanize","camelCase","pascalCase","snakeCase","kebabCase","titleCase","sentenceCase","startWith","startWithout","endWith","endWithout","surround","title","splitByWords","list","shuffle","last","nth"],"body":"  Modifiers  Modifiers are a key feature of Mods that allow you to easily modify and enhance your content. They are small pieces of code that can be applied to your JS to add functionality, validation or style.  widont  Adds a space between the last two words in a string.     widont  (  'Cool cool cool'  )\n     cool cool  &nbsp;  cool\n  stripHtml  Strip HTML tags from a string.     stripHtml  (  '<p>Hello World</p>'  )\n     Hello World\n  escapeHtml  Escape HTML entities in a string.     escapeHtml  (  '<p>Hello World</p>'  )\n     &lt;  p  &gt;  Hello World  &lt;  /p  &gt;\n  unescapeHtml  Unescape HTML entities in a string.     unescapeHtml  (  '&lt;p&gt;Hello World&lt;/p&gt;'  )\n     <  p  >Hello World</  p  >\n  stripTags  Strip HTML tags from a string.     stripTags  (  '<p>Hello World</p>'  )\n     Hello World\n  slugify  Converts a string to-a-slug.     slugify  (  'Hello World'  )\n     hello-world\n  deslugify  Converts a slug to a string.     deslugify  (  'hello-world'  )\n     hello world\n  truncate  Truncates a string to a specified length of characters.     truncate  (  'Hello World'  ,   5  )\n     Hello...\n  truncateWords  Truncates a string by a number of words     truncateWords  (  'Hello World'  ,   1  )\n     Hello...\n  countWords  Counts the number of words in a string.     countWords  (  'Hello World'  )\n     2\n  countCharacters  Counts the number of characters in a string.     countCharacters  (  'Hello World'  )\n     11\n  countLines  Counts the number of lines in a string.     countLines  (  'Hello World'  )\n     1\n  stripWhitespace  Strips whitespace from a string.     stripWhitespace  (  'Hello World'  )\n     HelloWorld\n  stripNumbers  Strips numbers from a string.     stripNumbers  (  'Hello World 123'  )\n     Hello World\n  stripPunctuation  Strips punctuation from a string.     stripPunctuation  (  'Hello World!'  )\n     Hello World\n  stripSymbols  Strips symbols from a string.     stripSymbols  (  'Hello World!'  )\n     Hello World\n  stripEmojis  Strips emojis from a string (requires ES6 Unicode support) ðŸ¦Š.     stripEmojis  (  'Hello World! ðŸ¦Š'  )\n     Hello World!\n  readingTime  Returns the reading time of a string in Hours, Minutes, and Seconds.     readingTime  (  'Once, in a vibrant online forum, lived Mod Max, guardian of digital harmony. Max cherished his old scooter, Swift, a symbol of freedom. Navigating both virtual and real worlds, they became legends. Trolls quivered, posts flourished, and lanes whizzed by. Swiftâ€™s wheels spun tales, and Maxâ€™s keys kept peace. Together, they discovered uncharted threads and hidden lanes. Their journey, an endless adventure, painted pixels and pavements with stories of unity and exhilaration, leaving a trail for all in the intertwined realms of screens and streets.'  )\n     1 minute\n  pluralize  Adds plurals to a string.     pluralize  (  'scooter'  ,   10  )\n     scooters\n  singularize  Removes plurals from a string.     singularize  (  'scooters'  )\n     scooter\n  ordinalize  Converts a number to a string with ordinal suffix.     ordinalize  (  1  )\n     1st\n  humanize  Replaces underscores with spaces and capitalizes the first letter of each word.     humanize  (  'hello_world'  )\n     Hello World\n  camelCase  Removes spaces and capitalizes the first letter of each word except for the first word.     camelCase  (  'hello world'  )\n     helloWorld\n  pascalCase  Removes spaces and capitalizes the first letter of each word.     pascalCase  (  'hello world'  )\n     HelloWorld\n  snakeCase  Replaces spaces with underscores and converts to lowercase.     snakeCase  (  'hello world'  )\n     hello_world\n  kebabCase  Replaces spaces with hyphens and converts to lowercase.     titleize  (  'Hello World'  )\n     hello-world\n  titleCase  Converts to title case by capitalizing the first letter of each word.     titleCase  (  'hello world'  )\n     Hello World\n  sentenceCase  Converts to sentence case by capitalizing the first letter of the first word.     sentenceCase  (  'hello world'  )\n     Hello world\n  startWith  Adds a prefix to a string if it doesn't already start with the prefix.     startWith  (  'usemods.com'  ,   'https://'  )\n     https://usemods.com\n  startWithout  Removes a prefix from a string if it starts with the prefix.     startWithout  (  'https://usemods.com'  ,   'https://'  )\n     usemods.com\n  endWith  Adds a suffix to a string if it doesn't already end with the suffix.     endWith  (  'https://usemods'  ,   '.com'  )\n     https://usemods.com\n  endWithout  Removes a suffix from a string if it ends with the suffix.     endWithout  (  'https://usemods.com.au'  ,   '.au'  )\n     https://usemods.com\n  surround  Adds a prefix and suffix to a string if it doesn't already start and end with them.     surround  (  'https://'  ,   'usemods'  ,   '.com'  )\n     https://usemods.com\n  title  Converts a string to title case following the Chicago Manual of Style rules.     title  (  'the quick brown fox jumps over the lazy dog'  )\n     The Quick Brown Fox Jumps over the Lazy Dog\n  splitByWords  Wraps each word in a string with a span tag.     splitByWords  (  'Hello World. How are you?'  )\n     <  span   class  =  \"sentence sentence-1\"  ><  span   class  =  \"word word-1\"  >Hello</  span  > <  span   class  =  \"word word-2\"  >world.</  span  ></  span  > <  span   class  =  \"sentence sentence-2\"  ><  span   class  =  \"word word-3\"  >How</  span  > <  span   class  =  \"word word-4\"  >are</  span  > <  span   class  =  \"word word-5\"  >you?</  span  ></  span  >\n  list  Creates an array of list items (  <li> ) from an array of strings.     list  ([  'one'  ,   'two'  ,   'three'  ])\n     <  ul  ><  li  >one</  li  ><  li  >two</  li  ><  li  >three</  li  ></  ul  >\n  shuffle  Shuffles an array.     shuffle  ([  'one'  ,   'two'  ,   'three'  ])\n     ['three', 'one', 'two']\n  last  Returns the last item in an array.     last  ([  'one'  ,   'two'  ,   'three'  ])\n     three\n  nth  Returns the nth item in an array.     nth  ([  'one'  ,   'two'  ,   'three'  ],   1  )\n     two\n  html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}"},{"id":"content:2.functions:numbers.md","path":"/functions/numbers","dir":"functions","title":"Numbers","description":"","keywords":["random","sum","mean","average","median","mode","max","clamp","range","minMax","rangeAsPercentage","percentage","standardDeviation","skewness"],"body":"  This file contains functions that are related to numbers.  random  Generates a random integer between the specified minimum and maximum values.     random  (  1  ,   10  )\n     5\n  sum  Calculates the sum of an array of numbers.     sum  ([  1  ,   2  ,   3  ])\n     6\n  mean  Calculates the mean of an array of numbers.     average  ([  1  ,   2  ,   3  ])\n     2\n  average  Calculates the mean of an array of numbers.     average  ([  1  ,   2  ,   3  ])\n     2\n  median  Calculates the median of an array of numbers.     median  ([  1  ,   2  ,   3  ])\n     2\n  mode  Calculates the mode of an array of numbers.     mode  ([  1  ,   2  ,   2  ,   3  ])\n     2\n  max  Finds the maximum value in an array of numbers.     max  ([  1  ,   2  ,   3  ])\n     3\n  clamp  Clamps a number between the specified minimum and maximum values.     clamp  (  1  ,   10  ,   20  )\n     10\n  range  Returns the range of an array of numbers.     range  ([  1  ,   2  ,   3  ])\n     2\n  minMax  Returns the minimum and maximum values in an array of numbers.     minMax  ([  1  ,   2  ,   3  ,   4  ,   5  ])\n     [1, 5]\n  rangeAsPercentage  Returns the difference between two values, as a percentage.     differenceAsPercentage  (  10  ,   20  )\n     100\n  percentage  Returns the percentage of a value, relative to another value.     percentage  (  10  ,   100  )\n     10\n  standardDeviation  Returns the standard deviation of an array of numbers.     standardDeviation  ([  1  ,   2  ,   3  ,   20  ,   120  ,   2000  ])\n     0.5\n  skewness  Returns the measure of asymmetry of the probability distribution of an array of numbers. The skewness value can be positive, zero, negative, or undefined.     skewness  ([  1  ,   2  ,   3  ,   20  ,   120  ,   2000  ])\n     2.5\n  html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}"},{"id":"content:2.functions:validators.md","path":"/functions/validators","dir":"functions","title":"Validators","description":"","keywords":["isEmail","isNumber","isURL","isUUID","isJSON","isHex","isEmpty","isAlpha","isAlphanumeric","isArray","isObject","isBoolean","isFunction","isUndefined","isNull","isDate","isError","isTime","isLeapYear","isPromise","isSet","isMap","isEven","isOdd","isPositive","isNegative","isZero","isPrime","isOptimusPrime","isPalindrome","isInteger","isFloat","isBetween","isDivisibleBy","isCreditCardNumber","isIPAddress","isMACAddress","isLatLng","isLatitude","isLongitude","isPort","isPresent","hasProperties","hasKeys"],"body":"  Validators  A collection of validators for common data types  isEmail  Check if the input is a valid email address.     isEmail  (  'hello@usemods.com'  )\n     true\n  isNumber  Check if the input is a valid number.     isNumber  (  '123'  )\n     true\n  isURL  Check if the input is a valid URL.     isURL  (  'https://usemods.com'  )\n     true\n  isUUID  Check if the input is a valid UUID.     isUUID  (  'c9bf9e57-1685-4c89-bafb-ff5af830be8a'  )\n     true\n  isJSON  Check if the input is a valid JSON string.     isJSON  (  '{\"hello\": \"world\"}'  )\n     true\n  isHex  Check if the input is a valid hexadecimal color code.     isHex  (  '#fff'  )\n     true\n  isEmpty  Check if the input is an empty string.     isEmpty  (  ''  )\n     true\n  isAlpha  Check if the input contains only alphabetic characters.     isAlpha  (  'hello'  )\n     true\n  isAlphanumeric  Check if the input contains only alphanumeric characters.     isAlphanumeric  (  'hello123'  )\n     true\n  isArray  Check if the input is an array.     isArray  ([  1  ,   2  ,   3  ])\n     true\n  isObject  Check if the input is an object.     isObject  ({ hello:   'world'   })\n     true\n  isBoolean  Check if the input is a boolean value.     isBoolean  (  true  )\n     true\n  isFunction  Check if the input is a function.     isFunction  (()   =>   {})\n     true\n  isUndefined  Check if the input is undefined.     isUndefined  (  undefined  )\n     true\n  isNull  Check if the input is null.     isNull  (  null  )\n     true\n  isDate  Check if the input is a valid Date object.     isDate  (  new   Date  ())\n     true\n  isError  Check if the input is an Error object with a defined message.     isError  (  new   Error  (  'hello'  ))\n     true\n  isTime  Check if the input is a valid time in HH:mm format.     isTime  (  '12:00'  )\n     true\n  isLeapYear  Check if the input year is a leap year.     isLeapYear  (  2020  )\n     true\n  isPromise  Check if the input is a Promise object.     isPromise  (  new   Promise  (()   =>   {}))\n     true\n  isSet  Check if the input is a Set object.     isSet  (  new   Set  ())\n     true\n  isMap  Check if the input is a Map object.     isMap  (  new   Map  ())\n     true\n  isEven  Check if the number is even.     isEven  (  2  )\n     true\n  isOdd  Check if the number is odd.     isOdd  (  3  )\n     true\n  isPositive  Check if the number is positive.     isPositive  (  1  )\n     true\n  isNegative  Check if the number is negative.     isNegative  (  -  1  )\n     true\n  isZero  Check if the number is zero.     isZero  (  0  )\n     true\n  isPrime  Check if the number is a prime number.     isPrime  (  7  )\n     true\n  isOptimusPrime  Check if the string is equal to \"Optimus Prime\".     isOptimusPrime  (  'Optimus Prime'  )\n     true\n  isPalindrome  Check if the string is a palindrome.     isPalindrome  (  'racecar'  )\n     true\n  isInteger  Check if the number is an integer.     isInteger  (  1  )\n     true\n  isFloat  Check if the number is a float.     isFloat  (  1.5  )\n     true\n  isBetween  Check if the number is between the specified range.     isBetween  (  5  ,   1  ,   10  )\n     true\n  isDivisibleBy  Check if the number is divisible by the specified number.     isDivisibleBy  (  10  ,   2  )\n     true\n  isCreditCardNumber  Check if the input is a valid credit card number.     isCreditCardNumber  (  '4242424242424242'  )\n     true\n  isIPAddress  Check if the input is a valid IP address.     isIPAddress  (  '127.0.0.0'  )\n     true\n  isMACAddress  Check if the input is a valid MAC address.     isMACAddress  (  '00:00:00:00:00:00'  )\n     true\n  isLatLng  Check if the input is a valid latitude-longitude coordinate in the format lat,lng or lat,lng.     isLatLng  (  '40.741895,-73.989308'  )\n     true\n  isLatitude  Check if the input is a valid latitude coordinate.     isLatitude  (  '40.741895'  )\n     true\n  isLongitude  Check if the input is a valid longitude coordinate.     isLongitude  (  '-73.989308'  )\n     true\n  isPort  Check if the input is a valid port number.     isPort  (  3000  )\n     true\n  isPresent  Checks if a property and value pair exists in an object.     hasPropertyValue  ({ hello:   'world'   },   'hello'  ,   'world'  )\n     true\n  hasProperties  Check if a property exists in an object without checking its value.     hasProperties  ({ hello:   'world'   }, [  'hello'  ,   'world'  ])\n     true\n  hasKeys  Check if an array of key exists in an object     hasKeys  ({ hello:   'world'   }, [  'hello'  ,   'world'  ,])\n     true\n  html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}"},{"id":"content:10.faqs:faqs.md","path":"/faqs/faqs","dir":"faqs","title":"Questions","description":"Still looking for answers?","keywords":["How do I get started?","Laravel already has this.","How do I get started?"],"body":"  Questions  Still looking for answers?  How do I get started?  Did you see the docs? They're pretty good.  Laravel already has this.  That's neat.  How do I get started?  I just...I just told you like two questions ago."}]